{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":2157,"sourceType":"datasetVersion","datasetId":18}],"dockerImageVersionId":30746,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nplt.style.use('ggplot')\n\nimport nltk","metadata":{"execution":{"iopub.status.busy":"2024-07-12T18:50:43.984368Z","iopub.execute_input":"2024-07-12T18:50:43.984785Z","iopub.status.idle":"2024-07-12T18:50:45.837787Z","shell.execute_reply.started":"2024-07-12T18:50:43.984746Z","shell.execute_reply":"2024-07-12T18:50:45.836632Z"},"trusted":true},"execution_count":1,"outputs":[]},{"cell_type":"code","source":"df = pd.read_csv('../input/amazon-fine-food-reviews/Reviews.csv')\nprint(df.shape)\ndf = df.head(500)\nprint(df.shape)","metadata":{"execution":{"iopub.status.busy":"2024-07-12T18:50:45.839774Z","iopub.execute_input":"2024-07-12T18:50:45.840192Z","iopub.status.idle":"2024-07-12T18:50:54.063506Z","shell.execute_reply.started":"2024-07-12T18:50:45.840164Z","shell.execute_reply":"2024-07-12T18:50:54.062424Z"},"trusted":true},"execution_count":2,"outputs":[{"name":"stdout","text":"(568454, 10)\n(500, 10)\n","output_type":"stream"}]},{"cell_type":"code","source":"df.head()","metadata":{"execution":{"iopub.status.busy":"2024-07-12T18:50:54.065219Z","iopub.execute_input":"2024-07-12T18:50:54.065552Z","iopub.status.idle":"2024-07-12T18:50:54.089239Z","shell.execute_reply.started":"2024-07-12T18:50:54.065526Z","shell.execute_reply":"2024-07-12T18:50:54.088140Z"},"trusted":true},"execution_count":3,"outputs":[{"execution_count":3,"output_type":"execute_result","data":{"text/plain":"   Id   ProductId          UserId                      ProfileName  \\\n0   1  B001E4KFG0  A3SGXH7AUHU8GW                       delmartian   \n1   2  B00813GRG4  A1D87F6ZCVE5NK                           dll pa   \n2   3  B000LQOCH0   ABXLMWJIXXAIN  Natalia Corres \"Natalia Corres\"   \n3   4  B000UA0QIQ  A395BORC6FGVXV                             Karl   \n4   5  B006K2ZZ7K  A1UQRSCLF8GW1T    Michael D. Bigham \"M. Wassir\"   \n\n   HelpfulnessNumerator  HelpfulnessDenominator  Score        Time  \\\n0                     1                       1      5  1303862400   \n1                     0                       0      1  1346976000   \n2                     1                       1      4  1219017600   \n3                     3                       3      2  1307923200   \n4                     0                       0      5  1350777600   \n\n                 Summary                                               Text  \n0  Good Quality Dog Food  I have bought several of the Vitality canned d...  \n1      Not as Advertised  Product arrived labeled as Jumbo Salted Peanut...  \n2  \"Delight\" says it all  This is a confection that has been around a fe...  \n3         Cough Medicine  If you are looking for the secret ingredient i...  \n4            Great taffy  Great taffy at a great price.  There was a wid...  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>ProductId</th>\n      <th>UserId</th>\n      <th>ProfileName</th>\n      <th>HelpfulnessNumerator</th>\n      <th>HelpfulnessDenominator</th>\n      <th>Score</th>\n      <th>Time</th>\n      <th>Summary</th>\n      <th>Text</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>B001E4KFG0</td>\n      <td>A3SGXH7AUHU8GW</td>\n      <td>delmartian</td>\n      <td>1</td>\n      <td>1</td>\n      <td>5</td>\n      <td>1303862400</td>\n      <td>Good Quality Dog Food</td>\n      <td>I have bought several of the Vitality canned d...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>B00813GRG4</td>\n      <td>A1D87F6ZCVE5NK</td>\n      <td>dll pa</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1346976000</td>\n      <td>Not as Advertised</td>\n      <td>Product arrived labeled as Jumbo Salted Peanut...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>B000LQOCH0</td>\n      <td>ABXLMWJIXXAIN</td>\n      <td>Natalia Corres \"Natalia Corres\"</td>\n      <td>1</td>\n      <td>1</td>\n      <td>4</td>\n      <td>1219017600</td>\n      <td>\"Delight\" says it all</td>\n      <td>This is a confection that has been around a fe...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>B000UA0QIQ</td>\n      <td>A395BORC6FGVXV</td>\n      <td>Karl</td>\n      <td>3</td>\n      <td>3</td>\n      <td>2</td>\n      <td>1307923200</td>\n      <td>Cough Medicine</td>\n      <td>If you are looking for the secret ingredient i...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>B006K2ZZ7K</td>\n      <td>A1UQRSCLF8GW1T</td>\n      <td>Michael D. Bigham \"M. Wassir\"</td>\n      <td>0</td>\n      <td>0</td>\n      <td>5</td>\n      <td>1350777600</td>\n      <td>Great taffy</td>\n      <td>Great taffy at a great price.  There was a wid...</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"ax = df['Score'].value_counts().sort_index() \\\n    .plot(kind='bar',\n          title='Count of Reviews by Stars',\n          figsize=(10, 5))\nax.set_xlabel('Review Stars')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-12T18:50:54.090728Z","iopub.execute_input":"2024-07-12T18:50:54.091700Z","iopub.status.idle":"2024-07-12T18:50:54.399767Z","shell.execute_reply.started":"2024-07-12T18:50:54.091670Z","shell.execute_reply":"2024-07-12T18:50:54.398473Z"},"trusted":true},"execution_count":4,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x500 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"example = df['Text'][50]\nprint(example)","metadata":{"execution":{"iopub.status.busy":"2024-07-12T18:50:54.403372Z","iopub.execute_input":"2024-07-12T18:50:54.403743Z","iopub.status.idle":"2024-07-12T18:50:54.409791Z","shell.execute_reply.started":"2024-07-12T18:50:54.403713Z","shell.execute_reply":"2024-07-12T18:50:54.408658Z"},"trusted":true},"execution_count":5,"outputs":[{"name":"stdout","text":"This oatmeal is not good. Its mushy, soft, I don't like it. Quaker Oats is the way to go.\n","output_type":"stream"}]},{"cell_type":"code","source":"tokens = nltk.word_tokenize(example)\ntokens[:10]","metadata":{"execution":{"iopub.status.busy":"2024-07-12T18:50:54.410968Z","iopub.execute_input":"2024-07-12T18:50:54.411313Z","iopub.status.idle":"2024-07-12T18:50:54.439616Z","shell.execute_reply.started":"2024-07-12T18:50:54.411270Z","shell.execute_reply":"2024-07-12T18:50:54.438366Z"},"trusted":true},"execution_count":6,"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"['This', 'oatmeal', 'is', 'not', 'good', '.', 'Its', 'mushy', ',', 'soft']"},"metadata":{}}]},{"cell_type":"code","source":"tagged = nltk.pos_tag(tokens)\ntagged[:10]","metadata":{"execution":{"iopub.status.busy":"2024-07-12T18:50:54.440987Z","iopub.execute_input":"2024-07-12T18:50:54.441421Z","iopub.status.idle":"2024-07-12T18:50:54.570114Z","shell.execute_reply.started":"2024-07-12T18:50:54.441384Z","shell.execute_reply":"2024-07-12T18:50:54.569033Z"},"trusted":true},"execution_count":7,"outputs":[{"execution_count":7,"output_type":"execute_result","data":{"text/plain":"[('This', 'DT'),\n ('oatmeal', 'NN'),\n ('is', 'VBZ'),\n ('not', 'RB'),\n ('good', 'JJ'),\n ('.', '.'),\n ('Its', 'PRP$'),\n ('mushy', 'NN'),\n (',', ','),\n ('soft', 'JJ')]"},"metadata":{}}]},{"cell_type":"code","source":"entities = nltk.chunk.ne_chunk(tagged)\nentities.pprint()","metadata":{"execution":{"iopub.status.busy":"2024-07-12T18:50:54.572084Z","iopub.execute_input":"2024-07-12T18:50:54.572544Z","iopub.status.idle":"2024-07-12T18:50:54.696257Z","shell.execute_reply.started":"2024-07-12T18:50:54.572506Z","shell.execute_reply":"2024-07-12T18:50:54.695176Z"},"trusted":true},"execution_count":8,"outputs":[{"name":"stdout","text":"(S\n  This/DT\n  oatmeal/NN\n  is/VBZ\n  not/RB\n  good/JJ\n  ./.\n  Its/PRP$\n  mushy/NN\n  ,/,\n  soft/JJ\n  ,/,\n  I/PRP\n  do/VBP\n  n't/RB\n  like/VB\n  it/PRP\n  ./.\n  (ORGANIZATION Quaker/NNP Oats/NNPS)\n  is/VBZ\n  the/DT\n  way/NN\n  to/TO\n  go/VB\n  ./.)\n","output_type":"stream"}]},{"cell_type":"code","source":"from nltk.sentiment import SentimentIntensityAnalyzer\nfrom tqdm.notebook import tqdm\n\nsia = SentimentIntensityAnalyzer()","metadata":{"execution":{"iopub.status.busy":"2024-07-12T18:50:54.697506Z","iopub.execute_input":"2024-07-12T18:50:54.697803Z","iopub.status.idle":"2024-07-12T18:50:54.737656Z","shell.execute_reply.started":"2024-07-12T18:50:54.697778Z","shell.execute_reply":"2024-07-12T18:50:54.736502Z"},"trusted":true},"execution_count":9,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/nltk/twitter/__init__.py:20: UserWarning: The twython library has not been installed. Some functionality from the twitter package will not be available.\n  warnings.warn(\"The twython library has not been installed. \"\n","output_type":"stream"}]},{"cell_type":"code","source":"sia.polarity_scores('I am so happy!')","metadata":{"execution":{"iopub.status.busy":"2024-07-12T18:50:54.739238Z","iopub.execute_input":"2024-07-12T18:50:54.739634Z","iopub.status.idle":"2024-07-12T18:50:54.747435Z","shell.execute_reply.started":"2024-07-12T18:50:54.739605Z","shell.execute_reply":"2024-07-12T18:50:54.746359Z"},"trusted":true},"execution_count":10,"outputs":[{"execution_count":10,"output_type":"execute_result","data":{"text/plain":"{'neg': 0.0, 'neu': 0.318, 'pos': 0.682, 'compound': 0.6468}"},"metadata":{}}]},{"cell_type":"code","source":"sia.polarity_scores('This is the worst thing ever.')","metadata":{"execution":{"iopub.status.busy":"2024-07-12T18:50:54.748832Z","iopub.execute_input":"2024-07-12T18:50:54.749208Z","iopub.status.idle":"2024-07-12T18:50:54.761936Z","shell.execute_reply.started":"2024-07-12T18:50:54.749174Z","shell.execute_reply":"2024-07-12T18:50:54.760371Z"},"trusted":true},"execution_count":11,"outputs":[{"execution_count":11,"output_type":"execute_result","data":{"text/plain":"{'neg': 0.451, 'neu': 0.549, 'pos': 0.0, 'compound': -0.6249}"},"metadata":{}}]},{"cell_type":"code","source":"sia.polarity_scores(example)","metadata":{"execution":{"iopub.status.busy":"2024-07-12T18:50:54.763234Z","iopub.execute_input":"2024-07-12T18:50:54.763582Z","iopub.status.idle":"2024-07-12T18:50:54.774899Z","shell.execute_reply.started":"2024-07-12T18:50:54.763554Z","shell.execute_reply":"2024-07-12T18:50:54.773761Z"},"trusted":true},"execution_count":12,"outputs":[{"execution_count":12,"output_type":"execute_result","data":{"text/plain":"{'neg': 0.22, 'neu': 0.78, 'pos': 0.0, 'compound': -0.5448}"},"metadata":{}}]},{"cell_type":"code","source":"res = {}\nfor i, row in tqdm(df.iterrows(), total=len(df)):\n    text = row['Text']\n    myid = row['Id']\n    res[myid] = sia.polarity_scores(text)","metadata":{"execution":{"iopub.status.busy":"2024-07-12T18:50:54.776402Z","iopub.execute_input":"2024-07-12T18:50:54.776784Z","iopub.status.idle":"2024-07-12T18:50:55.349835Z","shell.execute_reply.started":"2024-07-12T18:50:54.776756Z","shell.execute_reply":"2024-07-12T18:50:55.348650Z"},"trusted":true},"execution_count":13,"outputs":[{"output_type":"display_data","data":{"text/plain":"  0%|          | 0/500 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"adebd92a34834cc693a9e2cf3f90e708"}},"metadata":{}}]},{"cell_type":"code","source":"vaders = pd.DataFrame(res).T\nvaders = vaders.reset_index().rename(columns={'index': 'Id'})\nvaders = vaders.merge(df, how='left')","metadata":{"execution":{"iopub.status.busy":"2024-07-12T18:50:55.354137Z","iopub.execute_input":"2024-07-12T18:50:55.354508Z","iopub.status.idle":"2024-07-12T18:50:55.380922Z","shell.execute_reply.started":"2024-07-12T18:50:55.354479Z","shell.execute_reply":"2024-07-12T18:50:55.379326Z"},"trusted":true},"execution_count":14,"outputs":[]},{"cell_type":"code","source":"vaders.head()","metadata":{"execution":{"iopub.status.busy":"2024-07-12T18:50:55.382396Z","iopub.execute_input":"2024-07-12T18:50:55.382739Z","iopub.status.idle":"2024-07-12T18:50:55.400805Z","shell.execute_reply.started":"2024-07-12T18:50:55.382710Z","shell.execute_reply":"2024-07-12T18:50:55.399522Z"},"trusted":true},"execution_count":15,"outputs":[{"execution_count":15,"output_type":"execute_result","data":{"text/plain":"   Id    neg    neu    pos  compound   ProductId          UserId  \\\n0   1  0.000  0.695  0.305    0.9441  B001E4KFG0  A3SGXH7AUHU8GW   \n1   2  0.079  0.853  0.068   -0.1027  B00813GRG4  A1D87F6ZCVE5NK   \n2   3  0.091  0.754  0.155    0.8265  B000LQOCH0   ABXLMWJIXXAIN   \n3   4  0.000  1.000  0.000    0.0000  B000UA0QIQ  A395BORC6FGVXV   \n4   5  0.000  0.552  0.448    0.9468  B006K2ZZ7K  A1UQRSCLF8GW1T   \n\n                       ProfileName  HelpfulnessNumerator  \\\n0                       delmartian                     1   \n1                           dll pa                     0   \n2  Natalia Corres \"Natalia Corres\"                     1   \n3                             Karl                     3   \n4    Michael D. Bigham \"M. Wassir\"                     0   \n\n   HelpfulnessDenominator  Score        Time                Summary  \\\n0                       1      5  1303862400  Good Quality Dog Food   \n1                       0      1  1346976000      Not as Advertised   \n2                       1      4  1219017600  \"Delight\" says it all   \n3                       3      2  1307923200         Cough Medicine   \n4                       0      5  1350777600            Great taffy   \n\n                                                Text  \n0  I have bought several of the Vitality canned d...  \n1  Product arrived labeled as Jumbo Salted Peanut...  \n2  This is a confection that has been around a fe...  \n3  If you are looking for the secret ingredient i...  \n4  Great taffy at a great price.  There was a wid...  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>neg</th>\n      <th>neu</th>\n      <th>pos</th>\n      <th>compound</th>\n      <th>ProductId</th>\n      <th>UserId</th>\n      <th>ProfileName</th>\n      <th>HelpfulnessNumerator</th>\n      <th>HelpfulnessDenominator</th>\n      <th>Score</th>\n      <th>Time</th>\n      <th>Summary</th>\n      <th>Text</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>0.000</td>\n      <td>0.695</td>\n      <td>0.305</td>\n      <td>0.9441</td>\n      <td>B001E4KFG0</td>\n      <td>A3SGXH7AUHU8GW</td>\n      <td>delmartian</td>\n      <td>1</td>\n      <td>1</td>\n      <td>5</td>\n      <td>1303862400</td>\n      <td>Good Quality Dog Food</td>\n      <td>I have bought several of the Vitality canned d...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>0.079</td>\n      <td>0.853</td>\n      <td>0.068</td>\n      <td>-0.1027</td>\n      <td>B00813GRG4</td>\n      <td>A1D87F6ZCVE5NK</td>\n      <td>dll pa</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1346976000</td>\n      <td>Not as Advertised</td>\n      <td>Product arrived labeled as Jumbo Salted Peanut...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>0.091</td>\n      <td>0.754</td>\n      <td>0.155</td>\n      <td>0.8265</td>\n      <td>B000LQOCH0</td>\n      <td>ABXLMWJIXXAIN</td>\n      <td>Natalia Corres \"Natalia Corres\"</td>\n      <td>1</td>\n      <td>1</td>\n      <td>4</td>\n      <td>1219017600</td>\n      <td>\"Delight\" says it all</td>\n      <td>This is a confection that has been around a fe...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>0.000</td>\n      <td>1.000</td>\n      <td>0.000</td>\n      <td>0.0000</td>\n      <td>B000UA0QIQ</td>\n      <td>A395BORC6FGVXV</td>\n      <td>Karl</td>\n      <td>3</td>\n      <td>3</td>\n      <td>2</td>\n      <td>1307923200</td>\n      <td>Cough Medicine</td>\n      <td>If you are looking for the secret ingredient i...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>0.000</td>\n      <td>0.552</td>\n      <td>0.448</td>\n      <td>0.9468</td>\n      <td>B006K2ZZ7K</td>\n      <td>A1UQRSCLF8GW1T</td>\n      <td>Michael D. Bigham \"M. Wassir\"</td>\n      <td>0</td>\n      <td>0</td>\n      <td>5</td>\n      <td>1350777600</td>\n      <td>Great taffy</td>\n      <td>Great taffy at a great price.  There was a wid...</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"ax = sns.barplot(data=vaders, x='Score', y='compound')\nax.set_title('Compund Score by Amazon Star Review')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-12T18:50:55.402263Z","iopub.execute_input":"2024-07-12T18:50:55.402921Z","iopub.status.idle":"2024-07-12T18:50:55.743809Z","shell.execute_reply.started":"2024-07-12T18:50:55.402892Z","shell.execute_reply":"2024-07-12T18:50:55.742612Z"},"trusted":true},"execution_count":16,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"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65SujBH79ddf9cQTTygwMNDV3q9fP73++ut677339OSTT3qc19N7JTIyUpJyfX9L0tGjR93aT58+rVdffVXLly/XwYMHc4z9OHbsWK71T5w4UR9++KEefPBBTZkyxW2at/s9JCTE45Vinj4H11KtWjWtW7dOP/zwg7744gtt3bpVW7Zscf179913tX79esXExORpeZJ0+PBhTZ48WWvWrNHhw4dzjNnK7bVq3rx5ntfxW1OnTs3RlpCQoHHjxrm1efO56Nevn9577z3NnDlTv//97119Z86cKYfDoV69el23vs2bN8vhcGjBggVasGBBjumXL19WUlKSTp8+rQoVKigwMFAtW7bUunXrXG1r165Vs2bN1KJFC1WqVElr1qzRn//8Z23fvl1Op1OPPvrodeu4FRCMSpgqVarohx9+uOYPWU/Onj3rmj+35R4+fFhOpzPHD1dPsi839zQ9e5qn+4NUqlTJ4/IqV67sVufNyh4M6qmuzMxMV1v2+q5V140Eo2xNmzZ1+4W7ZcsW9e3bV7t27dL48eNdv/yyB1T+NkB64u0+rFixoseBnqdPn5Z0ZcDytZw7d+66tWW7kf3r5+enJ554Qn/5y180b948Pf7449q2bZu2b9+uLl26uMJJXkyfPl2ScgzGrVevnpo0aaJt27Zp69atHkPQtd7DeX1/O51ONWvWTIcOHVLz5s3Vp08fhYWFyW63y+l0aurUqbneV2zOnDkaM2aMmjRpojlz5uQIlt7ud0+fgavrv/pzkBd169ZV3bp1Xc9//PFH9e/fX5s3b9bQoUNdF2Rcz8GDB9W8eXOdOXNGd999tzp06KCQkBD5+/vrp59+0syZM3N9rbLfR944dOiQqlevrkuXLmnnzp0aNGiQxo8frxo1auiPf/yjq583n4uWLVuqdu3a+uyzz3TmzBmVL19e27dvV2Jiorp06aLw8PDr1nf69GllZGRo/Pjx111vhQoVJEnx8fFau3at1q1bp/j4eO3YsUOjRo2SdCVIr169WsYYrVmzxtW/JOCqtBKmdevWkuR6o+dV9g/MkydPepx+4sQJt34F5dSpUx7bs+u6ev3ZvyAyMjJy9M+vG/dlr+96dd2s5s2bu67WW7t2ras9+5dXXoKut/swt6tfsvvt2rVL5sppeY//+vbte93ast3I/pWk/v37q1SpUvrHP/4hSa7/n3jiiTyvc/fu3dqyZYukK1fq/Pbqrm3btkn6v/BUEN5//30dOnRI48aN0zfffKN3331XL774ohISEq75V/pXX32lxx9/XFWrVtWSJUtUpkyZHH2Kymf3t26//Xb985//lOT+nr6eN954Q6dPn9aMGTO0fv16vfXWW5owYYISEhJ0//33X3Pe/LhbdGBgoO666y6tWLFC5cqV05NPPul2Baq3n4s+ffooLS1N8+bNkyTXFZd5/fyEhISofPny11ynMUbR0dGuebKPIq5evVrr1q1TVlaWK/y0b99eSUlJ2rVrl9asWSObzaZ27dp5+aoVLwSjEubxxx+Xw+HQxx9/rO+///6afa/+q6tRo0aSrlzm/lv79+/X0aNHFRMTk+tfmfnl66+/znHp8tV1ZdcpyXW66ciRIzn659eNKxs3bizpyqXFv3Xw4EGP6/ZWuXLlJMntUum77rpLkrRixYrrzp/f+zB73V999VWe+ufFjexfSYqIiFD37t31zTffaOPGjZozZ45iYmLUoUOHPK8zO/C0bdtWf/rTnzz+CwoK0pw5c27o6NeN2L9/vyTp4YcfzjHN03tLunJKpkuXLipVqpSWLVuW6xGhovLZ9cTTe1q68kdNbkekvHmtCkKVKlU0atQonT9/3u10mrefiz59+sjPz08zZ85Uenq65syZo/DwcLdTa9dy11136cyZM/ruu+/yvM5mzZopODhYa9as0dq1axUUFKQWLVpI+r+jQ8uXL9fGjRtVv379PB25uiUU2mgmFBnZN3isXr26+fbbbz32WbFihWnXrp3r+caNG13z/PLLL672jIwM89BDDxlJ5sUXX3RbRnR0dI5LPrNd68aHngZNe3PV0ty5c40k07NnT7f+u3fvNmXLlr3m4GtPsq/s+PDDD11t+XlV2jfffGM+/PBDt6uAsl2+fNm1vKeeesrVfvVVaZ4GOV99VVp+78Pk5GQTGhpqIiIizDfffJNjemZmptsl1tfizf7N9vXXXxtJrsu1J02alKd1GmPMhQsXTGhoqPH39zfHjh3LtV/v3r2NJDN9+nRX27UG92dfcu5p+z29j1566SUjybz11ltufbdv326Cg4ONJNO3b19Xe1JSkqlZs6ax2+1m1apV19zG/N7v19q23zp48KCZOnWqcTqdOaZlZWWZZ555xkgynTp1cpsWERGR6/qzrx787LPP3NpXrlxp/P39b/hzfT3Xulz//PnzplKlSsZut5u9e/caY27uc3HvvfcaSa5B188884zHfp62J/t2Hy1atPD4Xj537pzZvHlzjvbsKxMrVqzoulVFturVq7tuoTJ06FCPtdyKGGNUAo0aNcp1LrpZs2Zq2bKlmjZt6vpKkA0bNmjfvn1u4ylatmypESNG6JVXXlG9evXUvXt3lSlTRitWrFBiYqJat26t4cOHF3jtHTt21PPPP68VK1aoQYMG2r9/vz755BMFBgbqgw8+cBtf8dBDD6lWrVqaM2eOjh49qjvvvFOHDx/Wp59+qoceesjjzQ9vVPXq1fXyyy/r+eefV6NGjfToo48qJCREn3/+uZxOp+rXr6/du3fnaVnHjx/X448/rqefflqtW7d23TDwxIkTWrlypU6ePKnY2FiNHTvWNc8dd9yhd999V4MGDVKjRo1c23z69Gl9++23Cg4O1rp16yTl/z6sUKGCFi5cqK5du+quu+5SfHy8fve738lms+nIkSPavHmzTp8+rUuXLuV5mTeyf7O1atVKDRo00K5du+RwONS/f/88r2/evHlyOp168MEHrzkmacCAAfrXv/6l6dOna+DAgXlefl716dNHr776qoYMGaJ169apVq1a2rdvn+vrMrJPr2QbO3asDhw4oMaNG2vjxo3auHFjjmUOGTJEoaGhPv3snj17Vs8++6yGDx+uVq1aqV69eipXrpx++eUXrV27VgcPHlTFihX1+uuvu80XHx+vuXPn6sEHH1Tjxo3lcDh0zz336J577tFTTz2lDz/8UD169FD37t0VGRmpxMRErVy5Uo888kiO16oglS5dWn/5y180dOhQjR07VnPmzLmpz0Xfvn21evVq1zifGzkNHR8fr5dfflkjR45UrVq11KlTJ8XExOjcuXP6+eef9eWXX6p169Y5btwbHx+vpUuX6pdffskxhig+Pl4zZsxwPS4xfJ3M4Dvff/+9efrpp83vfvc7U65cOeNwOEzlypVNx44dzfvvv5/j0nBjjJkzZ45p1aqVKVu2rClVqpS54447zIsvvuh2iXO2gjhiNG7cOLNp0yYTHx9vypUrZ8qWLWvuu+8+s2XLFo/LOnz4sHnkkUdM+fLlTWBgoGnatKn5+OOPr3u5viee/tLPNnv2bNOoUSNTqlQpEx4ebv7whz+YY8eO3dBfqqmpqWb27Nmm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fQDFUv369fXiiy+qadOm+vnnn/XZZ59p4sSJGjRokLZu3SpJ2rJli4wx6t69u1sokiSbzSZJ2r17tzIyMtSpUye3Pvfee6+CgoK0fft2t/kcDodbUJKk//znP4qKilJkZKRSU1Nd/+rVqydJ+u677/J9+wEUDI4YASi2YmNjNWzYMGVkZOinn37Sli1btGzZMr3++ut69dVXderUKdlsNkVFReW6jOTkZElXjhBdzW63q1KlSq7p2cLCwtxOrUnSiRMndOzYMQ0YMMDjOgpzMDiAm0MwAlDs2e12xcbGKjY2VpGRkXr33Xe1efPmAllXQEBAjjZjjKpVq6Y+ffp4nCc8PLxAagGQ/whGAG4pNWrUkCSdOXNGlStXljFGR48eVfXq1T32zw4tx48fV6VKlVztGRkZ+uWXXxQXF3fddVaqVEk///yz4uLiXKfoABRPjDECUCwlJibK0/1pd+zYIenKqbHmzZvLZrNp4cKFysrKcuuXPW/9+vVlt9u1YsUKt+WtXbtWFy5cUOPGja9bS4sWLZSSkqI1a9bkmHb58mVdunTphrYNgO9wxAhAsfThhx8qLS1NzZs3V2RkpDIyMrR3715t2rRJERERateuncqUKaNu3brp448/1rhx49S8eXM5HA7t379fYWFh6tWrl4KDg9WlSxctXLhQkyZNUpMmTVyX69esWVN33333dWu55557tHnzZr333ntKTEzU7bffrqysLB07dkybN2/W6NGjVbNmzUJ4VQDcLL4SBECxtHPnTm3evFl79+7V6dOnlZGRofDwcDVs2FAPP/yw200e161bp5UrV+ro0aMKCAhQdHS0unXrpvr167v6rFy50nWDx7Jly+rOO+/M9QaPr7/+eo56MjIytGzZMm3YsEEnT55UQECAKlWqpKZNm6pTp04qXbp0wb4gAPIFwQgAAMDCGCMAAAALwQgAAMBCMAIAALAQjAAAACwEIwAAAAvBCAAAwEIwAgAAsBCMAAAALAQjAAAAC8EIAADAQjACAACwEIwAAAAsBCMAAADL/wfhPjcYbYf+EAAAAABJRU5ErkJggg=="},"metadata":{}}]},{"cell_type":"code","source":"fig, axs = plt.subplots(1, 3, figsize=(12, 3))\nsns.barplot(data=vaders, x='Score', y='pos', ax=axs[0])\nsns.barplot(data=vaders, x='Score', y='neu', ax=axs[1])\nsns.barplot(data=vaders, x='Score', y='neg', ax=axs[2])\naxs[0].set_title('Positive')\naxs[1].set_title('Neutral')\naxs[2].set_title('Negative')\nplt.tight_layout()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-12T18:50:55.745256Z","iopub.execute_input":"2024-07-12T18:50:55.745731Z","iopub.status.idle":"2024-07-12T18:50:56.662870Z","shell.execute_reply.started":"2024-07-12T18:50:55.745693Z","shell.execute_reply":"2024-07-12T18:50:56.661679Z"},"trusted":true},"execution_count":17,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1200x300 with 3 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"Roberta Pretrained Model","metadata":{}},{"cell_type":"code","source":"from transformers import AutoTokenizer\nfrom transformers import AutoModelForSequenceClassification\nfrom scipy.special import softmax","metadata":{"execution":{"iopub.status.busy":"2024-07-12T18:50:56.664424Z","iopub.execute_input":"2024-07-12T18:50:56.664838Z","iopub.status.idle":"2024-07-12T18:51:00.928978Z","shell.execute_reply.started":"2024-07-12T18:50:56.664805Z","shell.execute_reply":"2024-07-12T18:51:00.927844Z"},"trusted":true},"execution_count":18,"outputs":[]},{"cell_type":"code","source":"MODEL = f\"cardiffnlp/twitter-roberta-base-sentiment\"\ntokenizer = AutoTokenizer.from_pretrained(MODEL)\nmodel = AutoModelForSequenceClassification.from_pretrained(MODEL)","metadata":{"execution":{"iopub.status.busy":"2024-07-12T18:51:00.930459Z","iopub.execute_input":"2024-07-12T18:51:00.931101Z","iopub.status.idle":"2024-07-12T18:51:14.321465Z","shell.execute_reply.started":"2024-07-12T18:51:00.931063Z","shell.execute_reply":"2024-07-12T18:51:14.319996Z"},"trusted":true},"execution_count":19,"outputs":[{"output_type":"display_data","data":{"text/plain":"config.json:   0%|          | 0.00/747 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"81ea11fbf17440e5967ca886caa3fd03"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"vocab.json:   0%|          | 0.00/899k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"61cbf95ee3714ee5a65236a9ed65a84b"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"merges.txt:   0%|          | 0.00/456k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"578906dd4eb54cd4ad1ea75359b43a0c"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"special_tokens_map.json:   0%|          | 0.00/150 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"62e893edcda147189ddce3092d52e351"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"pytorch_model.bin:   0%|          | 0.00/499M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"8f28ad59aff04392ad1ed6ba2448f99b"}},"metadata":{}},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/torch/_utils.py:831: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()\n  return self.fget.__get__(instance, owner)()\n","output_type":"stream"}]},{"cell_type":"code","source":"print(example)\nsia.polarity_scores(example)","metadata":{"execution":{"iopub.status.busy":"2024-07-12T18:51:14.323222Z","iopub.execute_input":"2024-07-12T18:51:14.323821Z","iopub.status.idle":"2024-07-12T18:51:14.332157Z","shell.execute_reply.started":"2024-07-12T18:51:14.323787Z","shell.execute_reply":"2024-07-12T18:51:14.331063Z"},"trusted":true},"execution_count":20,"outputs":[{"name":"stdout","text":"This oatmeal is not good. Its mushy, soft, I don't like it. Quaker Oats is the way to go.\n","output_type":"stream"},{"execution_count":20,"output_type":"execute_result","data":{"text/plain":"{'neg': 0.22, 'neu': 0.78, 'pos': 0.0, 'compound': -0.5448}"},"metadata":{}}]},{"cell_type":"code","source":"# Run for Roberta Model\nencoded_text = tokenizer(example, return_tensors='pt')\noutput = model(**encoded_text)\nscores = output[0][0].detach().numpy()\nscores = softmax(scores)\nscores_dict = {\n    'roberta_neg' : scores[0],\n    'roberta_neu' : scores[1],\n    'roberta_pos' : scores[2]\n}\nprint(scores_dict)","metadata":{"execution":{"iopub.status.busy":"2024-07-12T18:51:14.333811Z","iopub.execute_input":"2024-07-12T18:51:14.334783Z","iopub.status.idle":"2024-07-12T18:51:15.242254Z","shell.execute_reply.started":"2024-07-12T18:51:14.334718Z","shell.execute_reply":"2024-07-12T18:51:15.241143Z"},"trusted":true},"execution_count":21,"outputs":[{"name":"stdout","text":"{'roberta_neg': 0.97635514, 'roberta_neu': 0.020687453, 'roberta_pos': 0.0029573678}\n","output_type":"stream"}]},{"cell_type":"code","source":"def polarity_scores_roberta(example):\n    encoded_text = tokenizer(example, return_tensors='pt')\n    output = model(**encoded_text)\n    scores = output[0][0].detach().numpy()\n    scores = softmax(scores)\n    scores_dict = {\n        'roberta_neg' : scores[0],\n        'roberta_neu' : scores[1],\n        'roberta_pos' : scores[2]\n    }\n    return scores_dict","metadata":{"execution":{"iopub.status.busy":"2024-07-12T18:51:15.243546Z","iopub.execute_input":"2024-07-12T18:51:15.244055Z","iopub.status.idle":"2024-07-12T18:51:15.250003Z","shell.execute_reply.started":"2024-07-12T18:51:15.244027Z","shell.execute_reply":"2024-07-12T18:51:15.248816Z"},"trusted":true},"execution_count":22,"outputs":[]},{"cell_type":"code","source":"res = {}\nfor i, row in tqdm(df.iterrows(), total=len(df)):\n    try:\n        text = row['Text']\n        myid = row['Id']\n        vader_result = sia.polarity_scores(text)\n        vader_result_rename = {}\n        for key, value in vader_result.items():\n            vader_result_rename[f\"vader_{key}\"] = value\n        roberta_result = polarity_scores_roberta(text)\n        both = {**vader_result_rename, **roberta_result}\n        res[myid] = both\n    except RuntimeError:\n        print(f'Broke for id {myid}')","metadata":{"execution":{"iopub.status.busy":"2024-07-12T18:51:15.251222Z","iopub.execute_input":"2024-07-12T18:51:15.251626Z","iopub.status.idle":"2024-07-12T18:52:41.806407Z","shell.execute_reply.started":"2024-07-12T18:51:15.251598Z","shell.execute_reply":"2024-07-12T18:52:41.805291Z"},"trusted":true},"execution_count":23,"outputs":[{"output_type":"display_data","data":{"text/plain":"  0%|          | 0/500 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"98eed9844a714589967dd466bcafdef8"}},"metadata":{}},{"name":"stdout","text":"Broke for id 83\nBroke for id 187\n","output_type":"stream"}]},{"cell_type":"code","source":"results_df = pd.DataFrame(res).T\nresults_df = results_df.reset_index().rename(columns={'index': 'Id'})\nresults_df = results_df.merge(df, how='left')","metadata":{"execution":{"iopub.status.busy":"2024-07-12T18:52:41.807729Z","iopub.execute_input":"2024-07-12T18:52:41.808043Z","iopub.status.idle":"2024-07-12T18:52:41.831920Z","shell.execute_reply.started":"2024-07-12T18:52:41.808017Z","shell.execute_reply":"2024-07-12T18:52:41.830746Z"},"trusted":true},"execution_count":24,"outputs":[]},{"cell_type":"code","source":"results_df.columns","metadata":{"execution":{"iopub.status.busy":"2024-07-12T18:52:41.833164Z","iopub.execute_input":"2024-07-12T18:52:41.833491Z","iopub.status.idle":"2024-07-12T18:52:41.841070Z","shell.execute_reply.started":"2024-07-12T18:52:41.833463Z","shell.execute_reply":"2024-07-12T18:52:41.840139Z"},"trusted":true},"execution_count":25,"outputs":[{"execution_count":25,"output_type":"execute_result","data":{"text/plain":"Index(['Id', 'vader_neg', 'vader_neu', 'vader_pos', 'vader_compound',\n       'roberta_neg', 'roberta_neu', 'roberta_pos', 'ProductId', 'UserId',\n       'ProfileName', 'HelpfulnessNumerator', 'HelpfulnessDenominator',\n       'Score', 'Time', 'Summary', 'Text'],\n      dtype='object')"},"metadata":{}}]},{"cell_type":"code","source":"sns.pairplot(data=results_df,\n             vars=['vader_neg', 'vader_neu', 'vader_pos',\n                  'roberta_neg', 'roberta_neu', 'roberta_pos'],\n            hue='Score',\n            palette='tab10')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-12T18:52:41.842242Z","iopub.execute_input":"2024-07-12T18:52:41.842591Z"},"trusted":true},"execution_count":null,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n","output_type":"stream"}]},{"cell_type":"code","source":"results_df.query('Score == 1') \\\n    .sort_values('roberta_pos', ascending=False)['Text'].values[0]","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"results_df.query('Score == 1') \\\n    .sort_values('vader_pos', ascending=False)['Text'].values[0]","metadata":{"execution":{"iopub.status.idle":"2024-07-12T18:52:57.905540Z","shell.execute_reply.started":"2024-07-12T18:52:57.883436Z","shell.execute_reply":"2024-07-12T18:52:57.904200Z"},"trusted":true},"execution_count":28,"outputs":[{"execution_count":28,"output_type":"execute_result","data":{"text/plain":"'So we cancelled the order.  It was cancelled without any problem.  That is a positive note...'"},"metadata":{}}]},{"cell_type":"code","source":"#Negative 5 star review\nresults_df.query('Score == 5') \\\n    .sort_values('roberta_neg', ascending=False)['Text'].values[0]","metadata":{"execution":{"iopub.status.busy":"2024-07-12T18:52:57.906844Z","iopub.execute_input":"2024-07-12T18:52:57.907146Z","iopub.status.idle":"2024-07-12T18:52:57.923696Z","shell.execute_reply.started":"2024-07-12T18:52:57.907122Z","shell.execute_reply":"2024-07-12T18:52:57.922575Z"},"trusted":true},"execution_count":29,"outputs":[{"execution_count":29,"output_type":"execute_result","data":{"text/plain":"'this was sooooo deliscious but too bad i ate em too fast and gained 2 pds! my fault'"},"metadata":{}}]},{"cell_type":"code","source":"results_df.query('Score == 5') \\\n    .sort_values('vader_neg', ascending=False)['Text'].values[0]","metadata":{"execution":{"iopub.status.busy":"2024-07-12T18:52:57.925168Z","iopub.execute_input":"2024-07-12T18:52:57.925542Z","iopub.status.idle":"2024-07-12T18:52:57.939686Z","shell.execute_reply.started":"2024-07-12T18:52:57.925513Z","shell.execute_reply":"2024-07-12T18:52:57.938593Z"},"trusted":true},"execution_count":30,"outputs":[{"execution_count":30,"output_type":"execute_result","data":{"text/plain":"'this was sooooo deliscious but too bad i ate em too fast and gained 2 pds! my fault'"},"metadata":{}}]}]}